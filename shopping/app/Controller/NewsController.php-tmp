<?php
App::uses('AppController', 'Controller');
/**
 * News Controller
 *
 * @property News $News
 * @property PaginatorComponent $Paginator
 * @property SessionComponent $Session
 */
class NewsController extends AppController {

	/**
	 * Components
	 *
	 * @var array
	 */
	public $components = array('Paginator', 'Session');

	/**
	 * index method
	 *
	 * @return void
	 */
	public function index() {
		$this->News->recursive = 0;
		$this->set('news', $this->Paginator->paginate());
	}
	public function gioithieu() {
		$this->set('title_for_layout', 'Gioi thieu - Hai Yen');
		$options = array(
			'conditions'   => array(
				'type_new_id' => 2,
			),
			'recursive' => 0,
		);
		$news = $this->News->find('first', $options);
		$this->set('new', $news);

	}
	public function khuyenmai() {
		$this->set('title_for_layout', 'Khuyen mai - Hai Yen');
		$options = array(
			'conditions'   => array(
				'type_new_id' => 5,
			),
			'recursive' => 0,
		);
		$news = $this->News->find('first', $options);
		$this->set('new', $news);

	}
	public function chiase() {
		$this->set('title_for_layout', 'Chia se - Hai Yen');
		$this->layout = 'share';
		$options      = array(
			'conditions'   => array(
				'type_new_id' => 1,
			),
			'recursive' => 0,
		);
		$news = $this->News->find('first', $options);
		$this->set('new', $news);

	}

	public function huongdanmuahang() {
		$this->set('title_for_layout', 'Huong dan mua hang - Hai Yen');
		$this->layout = 'share';
		$options      = array(
			'conditions'   => array(
				'type_new_id' => 1,
			),
			'recursive' => 0,
		);
		$news = $this->News->find('first', $options);
		$this->set('new', $news);

	}

	/**
	 * view method
	 *
	 * @throws NotFoundException
	 * @param string $id
	 * @return void
	 */
	public function view($id = null) {
		if (!$this->News->exists($id)) {
			throw new NotFoundException(__('Invalid news'));
		}
		$options = array('conditions' => array('News.'.$this->News->primaryKey => $id));
		$this->set('news', $this->News->find('first', $options));
	}

	/**
	 * add method
	 *
	 * @return void
	 */
	public function add() {
		if ($this->request->is('post')) {
			$this->News->create();
			if ($this->News->save($this->request->data)) {
				$this->Session->setFlash(__('The news has been saved.'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The news could not be saved. Please, try again.'));
			}
		}
		$typeNews = $this->News->TypeNew->find('list');
		$this->set(compact('typeNews'));
	}

	/**
	 * edit method
	 *
	 * @throws NotFoundException
	 * @param string $id
	 * @return void
	 */
	public function edit($id = null) {
		if (!$this->News->exists($id)) {
			throw new NotFoundException(__('Invalid news'));
		}
		if ($this->request->is(array('post', 'put'))) {
			if ($this->News->save($this->request->data)) {
				$this->Session->setFlash(__('The news has been saved.'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The news could not be saved. Please, try again.'));
			}
		} else {
			$options             = array('conditions' => array('News.'.$this->News->primaryKey => $id));
			$this->request->data = $this->News->find('first', $options);
		}
		$typeNews = $this->News->TypeNew->find('list');
		$this->set(compact('typeNews'));
	}

	/**
	 * delete method
	 *
	 * @throws NotFoundException
	 * @param string $id
	 * @return void
	 */
	public function delete($id = null) {
		$this->News->id = $id;
		if (!$this->News->exists()) {
			throw new NotFoundException(__('Invalid news'));
		}
		$this->request->allowMethod('post', 'delete');
		if ($this->News->delete()) {
			$this->Session->setFlash(__('The news has been deleted.'));
		} else {
			$this->Session->setFlash(__('The news could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}

	/**
	 * admin_index method
	 *
	 * @return void
	 */
	public function admin_index() {
		$this->News->recursive = 0;
		$this->set('news', $this->Paginator->paginate());
	}

	/**
	 * admin_view method
	 *
	 * @throws NotFoundException
	 * @param string $id
	 * @return void
	 */
	public function admin_view($id = null) {
		if (!$this->News->exists($id)) {
			throw new NotFoundException(__('Invalid news'));
		}
		$options = array('conditions' => array('News.'.$this->News->primaryKey => $id));
		$this->set('news', $this->News->find('first', $options));
	}

	/**
	 * admin_add method
	 *
	 * @return void
	 */
	public function admin_add() {
		if ($this->request->is('post')) {
			$this->News->create();
			if ($this->News->save($this->request->data)) {
				$this->Session->setFlash(__('The news has been saved.'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The news could not be saved. Please, try again.'));
			}
		}
		$typeNews = $this->News->TypeNew->find('list');
		$this->set(compact('typeNews'));
	}

	/**
	 * admin_edit method
	 *
	 * @throws NotFoundException
	 * @param string $id
	 * @return void
	 */
	public function admin_edit($id = null) {
		if (!$this->News->exists($id)) {
			throw new NotFoundException(__('Invalid news'));
		}
		if ($this->request->is(array('post', 'put'))) {
			if ($this->News->save($this->request->data)) {
				$this->Session->setFlash(__('The news has been saved.'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The news could not be saved. Please, try again.'));
			}
		} else {
			$options             = array('conditions' => array('News.'.$this->News->primaryKey => $id));
			$this->request->data = $this->News->find('first', $options);
		}
		$typeNews = $this->News->TypeNew->find('list');
		$this->set(compact('typeNews'));
	}

	/**
	 * admin_delete method
	 *
	 * @throws NotFoundException
	 * @param string $id
	 * @return void
	 */
	public function admin_delete($id = null) {
		$this->News->id = $id;
		if (!$this->News->exists()) {
			throw new NotFoundException(__('Invalid news'));
		}
		$this->request->allowMethod('post', 'delete');
		if ($this->News->delete()) {
			$this->Session->setFlash(__('The news has been deleted.'));
		} else {
			$this->Session->setFlash(__('The news could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}
}
